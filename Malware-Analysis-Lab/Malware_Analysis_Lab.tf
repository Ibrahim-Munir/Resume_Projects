provider "aws" {
  region     = "your_aws_region"
  access_key = "your_access_key"
  secret_key = "your_secret_key"
}

resource "aws_vpc" "custom_vpc" {
  cidr_block = "10.0.0.0/16"
}

resource "aws_subnet" "private_subnet" {
  vpc_id     = aws_vpc.custom_vpc.id
  cidr_block = "10.0.1.0/24"
  availability_zone = "your_chosen_availability_zone"
  
  tags = {
    Name = "PrivateSubnet"
  }
}

resource "aws_security_group" "flare_vm_sg" {
  name        = "flare_vm_sg"
  description = "Security group for Flare VM instance"
  vpc_id      = aws_vpc.custom_vpc.id

  # Define ingress and egress rules as needed for Flare VM access
  # Example: Allow SSH access from a trusted IP
  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["your_trusted_IP/32"]
  }

  # Other necessary rules for Flare VM
  # ...

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

resource "aws_instance" "flare_vm_instance" {
  ami                    = "your_custom_ami_id"  # ID of your custom AMI
  instance_type          = "t2.micro"
  key_name               = "your_key_pair_name"  # SSH key pair name
  subnet_id              = aws_subnet.private_subnet.id
  private_ip             = "10.0.1.10"  # Choose a private IP address within the subnet
  associate_public_ip_address = false
  security_group_ids     = [aws_security_group.flare_vm_sg.id]

  tags = {
    Name = "FlareVMInstance"
  }
}

output "flare_vm_private_ip" {
  value = aws_instance.flare_vm_instance.private_ip
}
